@{
    ViewBag.Title = "TimVe";
    Layout = "~/Views/Shared/_LayoutNguoiDung.cshtml";
    List<QuanLyVeTau.Models.PhanHoi> phanHois = ViewBag.Ratings;
    List<QuanLyVeTau.Models.Ga> gas = ViewBag.Gas;
}
<link href="~/Content/css/TimVe.css" rel="stylesheet" />
<div class="tab-content" id="myTabContent">
    <!-- Hero Section Start  -->
    <div class="top-customers-container">
        @Html.Action("Top3KhachHangPartial", "BaoCao")
    </div>
    <div class="rating-container mt-4">
        <h5>Đánh giá của người dùng</h5>
        <ul class="rating-list-container">
            @foreach (var phanHoi in phanHois)
            {
                <li class="rating-item">
                    <div class="user-info">
                        <strong>@phanHoi.HoaDon.KhachHang.TenKhach</strong>  <!-- Tên người dùng -->
                    </div>
                    <span class="stars">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <span class="star @(i <= phanHoi.SoSao ? "filled" : "")">★</span>
                        }
                    </span>
                    <p class="rating-comment">@phanHoi.NoiDung</p>
                    <p class="rating-date">@phanHoi.NgayPhanHoi</p>
                </li>
            }
        </ul>
    </div>

    <section class="heroSection fade show active" id="heroSection" role="tabpanel" aria-labelledby="heroSection-tab">
        <div class="content active">
            <div class="bgImg">
                <div class="container pt-5">
                    <div class="card p-1 mt-5" style="width: 32rem">
                        <div class="img d-flex">
                            <img src="~/Content/Images/—Pngtree—vietnam flag transparent background in_6979301.png" alt="Train Icon" class="img-fluid" style="width: 200px; height: auto">
                            <p class="fw-bold" style="color: var(--irctc-primary-color); font-size: 1.6em">
                                Đặt vé
                            </p>
                            <img src="~/Content/Images/cHJpdmF0ZS9zdGF0aWMvaW1hZ2VzL3dlYnNpdGUvMjAyMi0wNS9mbDE0NDMxMjI4ODI2LWltYWdlLWpvYjg0Ni0wMS5wbmc-removebg-preview.png" alt="Train Icon" class="img-fluid" style="width: 200px; height: auto">
                        </div>
                        <div class="card-body">
                            <!-- Đặt form bao bọc toàn bộ để có thể sử dụng FormCollection -->
                            @using (Html.BeginForm("ChonVe", "Ve", FormMethod.Post, new { @class = "row g-3", id = "trainSearchBtw1" }))
                            {
                                <div class="col-md-5 col-10 dropBox">
                                    <label for="from" class="form-label">Từ</label>
                                    <input type="text" class="form-control search txtGa" name="from" id="from" required="" autocomplete="off">
                                    <ul class="showList" id="suggestionsList">
                                       
                                    </ul>
                                </div>
                                <div class="col-md-2 col-2 align-self-end">
                                    <div class="btn" id="interchangeBtn">
                                        <img src="~/Content/Icons/arrows.png" alt="Interchange" class="img-fluid">
                                    </div>
                                </div>
                                <div class="col-md-5 col-12 dropBox">
                                    <label for="to" class="form-label">Đến</label>
                                    <input type="text" class="form-control search txtGa" autocomplete="off" name="to" id="to" required="">
                                    <ul class="showList" id="suggestionsList">
                                    </ul>
                                </div>
                   
                                <div class="col-6">
                                    <label for="date" class="form-label">Ngày đi</label>
                                    <input type="date" class="form-control" name="date" id="date" required="">
                                </div>
                                <div class="col-6">
                                    <label for="returnDate" class="form-label">Ngày về</label>
                                    <input type="date" class="form-control" name="returnDate" id="returnDate" disabled>
                                </div>
                                <div class="col-12">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="roundTrip" id="roundTripCheck">
                                        <label class="form-check-label" for="roundTripCheck">
                                            Khứ hồi
                                        </label>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <button type="submit" class="btn submitBtn px-4 fw-bold">
                                        Tìm
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>


<script>
    document.getElementById("roundTripCheck").addEventListener("change", function() {
        document.getElementById("returnDate").disabled = !this.checked;
    });
    // Đợi khi trang web được tải xong
    document.addEventListener('DOMContentLoaded', function () {
        localStorage.removeItem('TimVe');

        // Lấy phần tử button đổi chỗ
        var interchangeBtn = document.getElementById('interchangeBtn');

        // Lắng nghe sự kiện click trên nút đổi chỗ
        interchangeBtn.addEventListener('click', function () {
            var fromValue = document.getElementById('from').value;
            var toValue = document.getElementById('to').value;

            // Đổi chỗ giá trị giữa ô input "Từ" và "Đến"
            document.getElementById('from').value = toValue;
            document.getElementById('to').value = fromValue;
        });
    });
    document.addEventListener('DOMContentLoaded', function () {
        var dateInput = document.getElementById('date');
        var returnDateInput = document.getElementById('returnDate');
        const today = new Date();
        const year = today.getFullYear();
        const month = String(today.getMonth() + 1).padStart(2, '0');
        const day = String(today.getDate()).padStart(2, '0');
        const now = `${year}-${month}-${day}`;

        dateInput.setAttribute('min', now);


        dateInput.addEventListener('change', function () {
            var selectedDate = dateInput.value;


            returnDateInput.setAttribute('min', selectedDate);
        });
    });

    function GoiYGa(inputElement, suggestionsList) {
        function removeDiacritics(str) {
            return str.normalize('NFD').replace(/[\u0300-\u036f]/g, '');
        }
        var gaSuggestions = [];
        var filterGa = [];
        @foreach(var ga in gas) {
            @:gaSuggestions.push('@Html.Raw(ga.TenGa)');
        }
        var txt = inputElement.value;
        if (txt.length != 0) {
            var filterGa = gaSuggestions.filter(function (ga) {
                return removeDiacritics(ga).toLowerCase().includes(removeDiacritics(txt).toLowerCase()); // Kiểm tra tên ga có chứa chuỗi nhập vào không
            });
        } else {
        
            filterGa = gaSuggestions;
        }

        suggestionsList.style.display = 'block'
        suggestionsList.innerHTML = "";  // Xóa danh sách gợi ý cũ

        // Lọc và hiển thị các gợi ý ga
        filterGa.forEach(function (ga) {
            var listItem = document.createElement("li");
            listItem.textContent = ga;

            // Thêm sự kiện click để chọn gợi ý
            listItem.addEventListener("click", function () {
                inputElement.value = ga;  // Gán giá trị vào ô input
                suggestionsList.style.display = "none";  // Ẩn danh sách gợi ý sau khi chọn
            });

            suggestionsList.appendChild(listItem);
    });
}
    document.getElementById('from').addEventListener('input', function () {
        var parent = this.closest('.dropBox');
        var suggest = parent.querySelector('#suggestionsList')
        GoiYGa(this, suggest)
        document.addEventListener('click', function (e) {
            if (!document.getElementById('from').contains(e.target)) {
                suggest.style.display = "none";  // Ẩn danh sách gợi ý
            }
        });
    })
    document.getElementById('to').addEventListener('input', function (event) {
        var parent = this.closest('.dropBox')
        var suggest = parent.querySelector('#suggestionsList');
        GoiYGa(this, suggest);
        document.addEventListener('click', function (e) {
            if (!document.getElementById('to').contains(e.target)) {
                suggest.style.display = "none";  // Ẩn danh sách gợi ý
            }
        });
})

</script>
